{"ast":null,"code":"var _jsxFileName = \"/Users/dayoni/Desktop/emotion-diary/src/pages/Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport Header from \"components/Header\";\nimport MyButton from \"components/MyButton\";\nimport { DiaryContext } from \"App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst Home = () => {\n  _s();\n  const [curDate, setCurDate] = useState(new Date());\n  const [data, setData] = useState([]);\n  const diaryList = useContext(DiaryContext);\n  const headText = `${curDate.getFullYear()} ${monthNames[curDate.getMonth()]}`;\n  useEffect(() => {\n    const firstDay = new Date(curDate.getFullYear(), curDate.getMonth(), 1).getTime();\n    console.log(firstDay);\n  }, [curDate]);\n  const increaseMonth = () => {\n    setCurDate(new Date(curDate.getFullYear(), curDate.getMonth() + 1));\n  };\n  const decreaseMonth = () => {\n    setCurDate(new Date(curDate.getFullYear(), curDate.getMonth() - 1));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      headText: headText,\n      leftChild: /*#__PURE__*/_jsxDEV(MyButton, {\n        text: \"<\",\n        onClick: decreaseMonth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 28\n      }, this),\n      rightChild: /*#__PURE__*/_jsxDEV(MyButton, {\n        text: \">\",\n        onClick: increaseMonth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"TdivI0O1b9fLS8ft0odgZKm290s=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useContext","useEffect","Header","MyButton","DiaryContext","jsxDEV","_jsxDEV","monthNames","Home","_s","curDate","setCurDate","Date","data","setData","diaryList","headText","getFullYear","getMonth","firstDay","getTime","console","log","increaseMonth","decreaseMonth","children","leftChild","text","onClick","fileName","_jsxFileName","lineNumber","columnNumber","rightChild","_c","$RefreshReg$"],"sources":["/Users/dayoni/Desktop/emotion-diary/src/pages/Home.tsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport Header from \"components/Header\";\nimport MyButton from \"components/MyButton\";\nimport { DiaryContext } from \"App\";\n\nconst monthNames: string[] = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n];\n\nconst Home: React.FC = () => {\n    const [curDate, setCurDate] = useState(new Date());\n    const [data, setData] = useState([]);\n    const diaryList = useContext(DiaryContext);\n    const headText = `${curDate.getFullYear()} ${monthNames[curDate.getMonth()]}`;\n\n    useEffect(() => {\n        const firstDay = new Date(curDate.getFullYear(), curDate.getMonth(), 1).getTime();\n        console.log(firstDay);\n    }, [curDate]);\n\n    const increaseMonth = () => {\n        setCurDate(new Date(curDate.getFullYear(), curDate.getMonth() + 1));\n    };\n    const decreaseMonth = () => {\n        setCurDate(new Date(curDate.getFullYear(), curDate.getMonth() - 1));\n    };\n\n    return (\n        <div>\n            <Header\n                headText={headText}\n                leftChild={<MyButton text=\"<\" onClick={decreaseMonth} />}\n                rightChild={<MyButton text=\">\" onClick={increaseMonth} />}\n            />\n        </div>\n    );\n};\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC9D,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,SAASC,YAAY,QAAQ,KAAK;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,UAAoB,GAAG,CACzB,SAAS,EACT,UAAU,EACV,OAAO,EACP,OAAO,EACP,KAAK,EACL,MAAM,EACN,MAAM,EACN,QAAQ,EACR,WAAW,EACX,SAAS,EACT,UAAU,EACV,UAAU,CACb;AAED,MAAMC,IAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAIa,IAAI,CAAC,CAAC,CAAC;EAClD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMgB,SAAS,GAAGf,UAAU,CAACI,YAAY,CAAC;EAC1C,MAAMY,QAAQ,GAAI,GAAEN,OAAO,CAACO,WAAW,CAAC,CAAE,IAAGV,UAAU,CAACG,OAAO,CAACQ,QAAQ,CAAC,CAAC,CAAE,EAAC;EAE7EjB,SAAS,CAAC,MAAM;IACZ,MAAMkB,QAAQ,GAAG,IAAIP,IAAI,CAACF,OAAO,CAACO,WAAW,CAAC,CAAC,EAAEP,OAAO,CAACQ,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAACE,OAAO,CAAC,CAAC;IACjFC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;EACzB,CAAC,EAAE,CAACT,OAAO,CAAC,CAAC;EAEb,MAAMa,aAAa,GAAGA,CAAA,KAAM;IACxBZ,UAAU,CAAC,IAAIC,IAAI,CAACF,OAAO,CAACO,WAAW,CAAC,CAAC,EAAEP,OAAO,CAACQ,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACvE,CAAC;EACD,MAAMM,aAAa,GAAGA,CAAA,KAAM;IACxBb,UAAU,CAAC,IAAIC,IAAI,CAACF,OAAO,CAACO,WAAW,CAAC,CAAC,EAAEP,OAAO,CAACQ,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACvE,CAAC;EAED,oBACIZ,OAAA;IAAAmB,QAAA,eACInB,OAAA,CAACJ,MAAM;MACHc,QAAQ,EAAEA,QAAS;MACnBU,SAAS,eAAEpB,OAAA,CAACH,QAAQ;QAACwB,IAAI,EAAC,GAAG;QAACC,OAAO,EAAEJ;MAAc;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE;MACzDC,UAAU,eAAE3B,OAAA,CAACH,QAAQ;QAACwB,IAAI,EAAC,GAAG;QAACC,OAAO,EAAEL;MAAc;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACvB,EAAA,CA3BID,IAAc;AAAA0B,EAAA,GAAd1B,IAAc;AA6BpB,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}