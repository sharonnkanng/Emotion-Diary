{"ast":null,"code":"var _jsxFileName = \"/Users/dayoni/Desktop/emotion-diary/src/components/DiaryList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sortOptionList = [{\n  value: \"latest\",\n  name: \"latest\"\n}, {\n  value: \"oldest\",\n  name: \"oldest\"\n}];\nconst ControlMenu = ({\n  value,\n  onChange,\n  optionList\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    value: value,\n    onChange: e => onChange(e.target.value),\n    children: optionList.map((item, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item.value,\n      children: item.name\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_c = ControlMenu;\nconst DiaryList = ({\n  diaryList\n}) => {\n  _s();\n  const [sortType, setSortType] = useState(\"latest\");\n  const getProcessedDiaryList = () => {\n    const compare = (a, b) => {\n      if (sortType === \"latest\") {\n        return b.date - a.date;\n      } else {\n        return a.date - b.date;\n      }\n    };\n    const copyList = JSON.parse(JSON.stringify(diaryList));\n    const sortedList = copyList.sort(compare);\n    return sortedList;\n  };\n  const processedDiaryList = getProcessedDiaryList();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ControlMenu, {\n      value: sortType,\n      onChange: setSortType,\n      optionList: sortOptionList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), getProcessedDiaryList().map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item.content\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(DiaryList, \"PuwKp9zHOe0WIMKG18LP+mqXeSM=\");\n_c2 = DiaryList;\nDiaryList.defaultProps = {\n  diaryList: []\n};\nexport default DiaryList;\nvar _c, _c2;\n$RefreshReg$(_c, \"ControlMenu\");\n$RefreshReg$(_c2, \"DiaryList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","sortOptionList","value","name","ControlMenu","onChange","optionList","e","target","children","map","item","idx","fileName","_jsxFileName","lineNumber","columnNumber","_c","DiaryList","diaryList","_s","sortType","setSortType","getProcessedDiaryList","compare","a","b","date","copyList","JSON","parse","stringify","sortedList","sort","processedDiaryList","content","id","_c2","defaultProps","$RefreshReg$"],"sources":["/Users/dayoni/Desktop/emotion-diary/src/components/DiaryList.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ProcessedComment } from \"App\";\n\ninterface Option {\n    value: string;\n    name: string;\n}\nconst sortOptionList: Option[] = [\n    { value: \"latest\", name: \"latest\" },\n    { value: \"oldest\", name: \"oldest\" },\n];\n\ninterface ControlMenuProps {\n    value: Option[\"value\"];\n    onChange: (value: string) => void;\n    optionList: Option[];\n}\n\nconst ControlMenu: React.FC<ControlMenuProps> = ({ value, onChange, optionList }) => {\n    return (\n        <select value={value} onChange={(e) => onChange(e.target.value)}>\n            {optionList.map((item, idx) => (\n                <option key={idx} value={item.value}>\n                    {item.name}\n                </option>\n            ))}\n        </select>\n    );\n};\nconst DiaryList = ({ diaryList }) => {\n    const [sortType, setSortType] = useState(\"latest\");\n\n    const getProcessedDiaryList = (): ProcessedComment[] => {\n        const compare = (a: ProcessedComment, b: ProcessedComment) => {\n            if (sortType === \"latest\") {\n                return b.date - a.date;\n            } else {\n                return a.date - b.date;\n            }\n        };\n\n        const copyList = JSON.parse(JSON.stringify(diaryList));\n        const sortedList = copyList.sort(compare);\n        return sortedList;\n    };\n\n    const processedDiaryList = getProcessedDiaryList();\n\n    return (\n        <div>\n            <ControlMenu value={sortType} onChange={setSortType} optionList={sortOptionList} />\n            {getProcessedDiaryList().map((item) => (\n                <div key={item.id}>{item.content}</div>\n            ))}\n        </div>\n    );\n};\n\nDiaryList.defaultProps = {\n    diaryList: [],\n};\n\nexport default DiaryList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOxC,MAAMC,cAAwB,GAAG,CAC7B;EAAEC,KAAK,EAAE,QAAQ;EAAEC,IAAI,EAAE;AAAS,CAAC,EACnC;EAAED,KAAK,EAAE,QAAQ;EAAEC,IAAI,EAAE;AAAS,CAAC,CACtC;AAQD,MAAMC,WAAuC,GAAGA,CAAC;EAAEF,KAAK;EAAEG,QAAQ;EAAEC;AAAW,CAAC,KAAK;EACjF,oBACIN,OAAA;IAAQE,KAAK,EAAEA,KAAM;IAACG,QAAQ,EAAGE,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAACC,MAAM,CAACN,KAAK,CAAE;IAAAO,QAAA,EAC3DH,UAAU,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,kBACtBZ,OAAA;MAAkBE,KAAK,EAAES,IAAI,CAACT,KAAM;MAAAO,QAAA,EAC/BE,IAAI,CAACR;IAAI,GADDS,GAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAER,CACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEjB,CAAC;AAACC,EAAA,GAVIb,WAAuC;AAW7C,MAAMc,SAAS,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,QAAQ,CAAC;EAElD,MAAMyB,qBAAqB,GAAGA,CAAA,KAA0B;IACpD,MAAMC,OAAO,GAAGA,CAACC,CAAmB,EAAEC,CAAmB,KAAK;MAC1D,IAAIL,QAAQ,KAAK,QAAQ,EAAE;QACvB,OAAOK,CAAC,CAACC,IAAI,GAAGF,CAAC,CAACE,IAAI;MAC1B,CAAC,MAAM;QACH,OAAOF,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI;MAC1B;IACJ,CAAC;IAED,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACZ,SAAS,CAAC,CAAC;IACtD,MAAMa,UAAU,GAAGJ,QAAQ,CAACK,IAAI,CAACT,OAAO,CAAC;IACzC,OAAOQ,UAAU;EACrB,CAAC;EAED,MAAME,kBAAkB,GAAGX,qBAAqB,CAAC,CAAC;EAElD,oBACIvB,OAAA;IAAAS,QAAA,gBACIT,OAAA,CAACI,WAAW;MAACF,KAAK,EAAEmB,QAAS;MAAChB,QAAQ,EAAEiB,WAAY;MAAChB,UAAU,EAAEL;IAAe;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAClFO,qBAAqB,CAAC,CAAC,CAACb,GAAG,CAAEC,IAAI,iBAC9BX,OAAA;MAAAS,QAAA,EAAoBE,IAAI,CAACwB;IAAO,GAAtBxB,IAAI,CAACyB,EAAE;MAAAvB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqB,CACzC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACI,EAAA,CA3BIF,SAAS;AAAAmB,GAAA,GAATnB,SAAS;AA6BfA,SAAS,CAACoB,YAAY,GAAG;EACrBnB,SAAS,EAAE;AACf,CAAC;AAED,eAAeD,SAAS;AAAC,IAAAD,EAAA,EAAAoB,GAAA;AAAAE,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAAF,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}