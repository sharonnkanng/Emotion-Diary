{"ast":null,"code":"var _jsxFileName = \"/Users/dayoni/Desktop/emotion-diary/src/components/DiaryEditor.tsx\",\n  _s = $RefreshSig$();\nimport Header from \"./Header\";\nimport MyButton from \"./MyButton\";\nimport { useNavigate } from \"react-router\";\nimport React, { useContext, useRef, useState } from \"react\";\nimport EmotionItem from \"./EmotionItem\";\nimport { DiaryContext } from \"App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emotionList = [{\n  emotion_id: 1,\n  emotion_img: process.env.PUBLIC_URL + \"/assets/emotion1.png\",\n  emotion_des: \"Terrific\"\n}, {\n  emotion_id: 2,\n  emotion_img: process.env.PUBLIC_URL + \"/assets/emotion2.png\",\n  emotion_des: \"Happy\"\n}, {\n  emotion_id: 3,\n  emotion_img: process.env.PUBLIC_URL + \"/assets/emotion3.png\",\n  emotion_des: \"Moderate\"\n}, {\n  emotion_id: 4,\n  emotion_img: process.env.PUBLIC_URL + \"/assets/emotion4.png\",\n  emotion_des: \"Awful\"\n}, {\n  emotion_id: 5,\n  emotion_img: process.env.PUBLIC_URL + \"/assets/emotion5.png\",\n  emotion_des: \"Horrible\"\n}];\nconst getStringDate = date => {\n  const year = date.getFullYear();\n  let month = date.getMonth() + 1;\n  let day = date.getDate();\n  if (month < 10) {\n    month = `0${month}`;\n  }\n  if (day < 10) {\n    day = Number(`0${day}`);\n  }\n  return `${year}-${month}-${day}`;\n};\nconst DiaryEditor = () => {\n  _s();\n  const navigate = useNavigate();\n  const contentRef = useRef(null);\n  const [emotion, setEmotion] = useState(3);\n  const [date, setDate] = useState(getStringDate(new Date()));\n  const [content, setContent] = useState(\"\");\n  const handleClickEmotion = emotion => {\n    setEmotion(emotion);\n  };\n  const {\n    onCreate\n  } = useContext(DiaryContext) || {};\n  const handleSubmit = () => {\n    if (content.length < 1) {\n      var _contentRef$current;\n      console.log(\"content is empty\");\n      (_contentRef$current = contentRef.current) === null || _contentRef$current === void 0 ? void 0 : _contentRef$current.focus();\n      return;\n    }\n    if (onCreate) {\n      onCreate(new Date(date).getTime(), content, emotion);\n      navigate(\"/\", {\n        replace: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DiaryEditor \",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      headText: \"Write a new diary\",\n      leftChild: /*#__PURE__*/_jsxDEV(MyButton, {\n        text: \"Previous\",\n        onClick: () => navigate(-1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"What's the date?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-box\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input-date\",\n            type: \"date\",\n            value: date,\n            onChange: e => setDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Today's emotion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-box emotion-list-wrapper\",\n          children: emotionList.map(it => /*#__PURE__*/_jsxDEV(EmotionItem, {\n            ...it,\n            onClick: handleClickEmotion,\n            isSelected: it.emotion_id === emotion\n          }, it.emotion_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Today's Diary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-text-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"How was your day?\",\n            ref: contentRef,\n            value: content,\n            onChange: e => setContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-box\",\n          children: [/*#__PURE__*/_jsxDEV(MyButton, {\n            text: \"Cancel\",\n            onClick: () => navigate(-1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n            text: \"Save\",\n            type: \"positive\",\n            onClick: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(DiaryEditor, \"cMCIOkCgbjrPQCkgwtSv1C1pF7o=\", false, function () {\n  return [useNavigate];\n});\n_c = DiaryEditor;\nexport default DiaryEditor;\nvar _c;\n$RefreshReg$(_c, \"DiaryEditor\");","map":{"version":3,"names":["Header","MyButton","useNavigate","React","useContext","useRef","useState","EmotionItem","DiaryContext","jsxDEV","_jsxDEV","emotionList","emotion_id","emotion_img","process","env","PUBLIC_URL","emotion_des","getStringDate","date","year","getFullYear","month","getMonth","day","getDate","Number","DiaryEditor","_s","navigate","contentRef","emotion","setEmotion","setDate","Date","content","setContent","handleClickEmotion","onCreate","handleSubmit","length","_contentRef$current","console","log","current","focus","getTime","replace","className","children","headText","leftChild","text","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","map","it","isSelected","placeholder","ref","_c","$RefreshReg$"],"sources":["/Users/dayoni/Desktop/emotion-diary/src/components/DiaryEditor.tsx"],"sourcesContent":["import Header from \"./Header\";\nimport MyButton from \"./MyButton\";\nimport { useNavigate } from \"react-router\";\nimport React, { useContext, useRef, useState } from \"react\";\nimport EmotionItem from \"./EmotionItem\";\nimport { DiaryContext } from \"App\";\n\nconst emotionList = [\n    {\n        emotion_id: 1,\n        emotion_img: process.env.PUBLIC_URL + \"/assets/emotion1.png\",\n        emotion_des: \"Terrific\",\n    },\n    {\n        emotion_id: 2,\n        emotion_img: process.env.PUBLIC_URL + \"/assets/emotion2.png\",\n        emotion_des: \"Happy\",\n    },\n    {\n        emotion_id: 3,\n        emotion_img: process.env.PUBLIC_URL + \"/assets/emotion3.png\",\n        emotion_des: \"Moderate\",\n    },\n    {\n        emotion_id: 4,\n        emotion_img: process.env.PUBLIC_URL + \"/assets/emotion4.png\",\n        emotion_des: \"Awful\",\n    },\n    {\n        emotion_id: 5,\n        emotion_img: process.env.PUBLIC_URL + \"/assets/emotion5.png\",\n        emotion_des: \"Horrible\",\n    },\n];\n\nconst getStringDate = (date: Date) => {\n    const year = date.getFullYear();\n    let month: string | number = date.getMonth() + 1;\n    let day: string | number = date.getDate();\n\n    if (month < 10) {\n        month = `0${month}`;\n    }\n\n    if (day < 10) {\n        day = Number(`0${day}`);\n    }\n\n    return `${year}-${month}-${day}`;\n};\n\nconst DiaryEditor = () => {\n    const navigate = useNavigate();\n    const contentRef = useRef<HTMLTextAreaElement>(null);\n    const [emotion, setEmotion] = useState<number>(3);\n    const [date, setDate] = useState<string>(getStringDate(new Date()));\n    const [content, setContent] = useState<string>(\"\");\n\n    const handleClickEmotion = (emotion: number) => {\n        setEmotion(emotion);\n    };\n    const { onCreate } = useContext(DiaryContext) || {};\n\n    const handleSubmit = () => {\n        if (content.length < 1) {\n            console.log(\"content is empty\");\n            contentRef.current?.focus();\n            return;\n        }\n        if (onCreate) {\n            onCreate(new Date(date).getTime(), content, emotion);\n            navigate(\"/\", { replace: true });\n        }\n    };\n    return (\n        <div className=\"DiaryEditor \">\n            <Header\n                headText=\"Write a new diary\"\n                leftChild={<MyButton text=\"Previous\" onClick={() => navigate(-1)} />}\n            />\n            <div>\n                <section>\n                    <h4>What&apos;s the date?</h4>\n                    <div className=\"input-box\">\n                        <input\n                            className=\"input-date\"\n                            type=\"date\"\n                            value={date}\n                            onChange={(e) => setDate(e.target.value)}\n                        />\n                    </div>\n                </section>\n                <section>\n                    <h4>Today&apos;s emotion</h4>\n                    <div className=\"input-box emotion-list-wrapper\">\n                        {emotionList.map((it) => (\n                            <EmotionItem\n                                key={it.emotion_id}\n                                {...it}\n                                onClick={handleClickEmotion}\n                                isSelected={it.emotion_id === emotion}\n                            />\n                        ))}\n                    </div>\n                </section>\n                <section>\n                    <h4>Today&apos;s Diary</h4>\n                    <div className=\"input-text-wrapper\">\n                        <textarea\n                            placeholder={\"How was your day?\"}\n                            ref={contentRef}\n                            value={content}\n                            onChange={(e) => setContent(e.target.value)}\n                        />\n                    </div>\n                </section>\n                <section>\n                    <div className=\"control-box\">\n                        <MyButton text=\"Cancel\" onClick={() => navigate(-1)} />\n                        <MyButton text=\"Save\" type={\"positive\"} onClick={handleSubmit} />\n                    </div>\n                </section>\n            </div>\n        </div>\n    );\n};\n\nexport default DiaryEditor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}